# Main.py

from turtle import  Screen, Turtle
from car_manager import CarManager
from player import Player
from scoreboard import Scoreboard
import time

screen = Screen()

screen.setup(width=600, height= 600)
screen.tracer(0)

player = Player()
carmanager = CarManager()
scoreboard = Scoreboard()

screen.listen()
screen.onkey(player.go_up,key="Up")

is_game_on = True
while is_game_on:
    time.sleep(0.1)
    screen.update()
    carmanager.create_car()
    carmanager.move_cars()

    #detect collision with car
    for car in carmanager.all_cars:
        if car.distance(player) < 20:
            is_game_on = False
            scoreboard.game_over()


    #detect successful crossing
    if player.is_at_finish_line():
        player.go_to_start()
        carmanager.level_up()
        scoreboard.increase_level()

screen.exitonclick()

# player.py
from turtle import Turtle

start_position = (0, -280)
move_distance = 10
Finish_Line_Y = 280

class Player(Turtle):
    def __init__(self):
        super().__init__()
        self.color("Green")
        self.shape("turtle")
        self.penup()
        self.go_to_start()
        self.setheading(90)
        
    def go_up(self):
        self.forward(move_distance)
        
    def go_to_start(self):
        self.goto(start_position)
        
    def is_at_finish_line(self):
        if self.ycor() > Finish_Line_Y:
            return True
        else:
            return False

# carmanager.py
import random
from turtle import Turtle

colors = ["red","orange","yellow","blue","purple"]
STARTING_MOVE_DISTANCE = 5
MOVE_INCREMENT = 10

class CarManager:
    def __init__(self):
        self.all_cars = []
        self.car_speed = STARTING_MOVE_DISTANCE
        
    def create_car(self):
        random_chance = random.randint(1,6)
        if random_chance == 1:
            new_car = Turtle("square")
            new_car.shapesize(stretch_wid=1,stretch_len=2)
            new_car.penup()
            new_car.color(random.choice(colors))
            random_y = random.randint(-250, 250)
            new_car.goto(-300, random_y)
            self.all_cars.append(new_car)

    def move_cars(self):
        for car in self.all_cars:
            car.forward(self.car_speed)
            
    def level_up(self):
        self.car_speed += MOVE_INCREMENT

# scoreboard.py
from turtle import Turtle

class Scoreboard(Turtle):
    def __init__(self):
        super().__init__()
        self.level = 1
        self.hideturtle()
        self.penup()
        self.goto(-280,250)
        self.update_scoreboard()

    def update_scoreboard(self):
        self.clear()
        self.write(f"Level: {self.level}", font=("courier", 24, "normal"))

    def increase_level(self):
        self.level += 1
        self.update_scoreboard()

    def game_over(self):
        self.goto(0, 0)
        self.write(f"Game Over...",align="center", font=("courier", 24, "normal"))
